version: '3.7'
services:

# Krakend Gateway
  krakend:
    container_name: krakend
    build:
      context: krakend
      dockerfile: Dockerfile
    volumes:
      - ./krakend:/etc/krakend
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - auth-service
      - product-service
      - order-service

# Postgres Service
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: sukenda
      POSTGRES_PASSWORD: sukenda
      POSTGRES_DB: sukenda
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped

# Auth Service
  auth-service:
    container_name: auth-service
    build:
      context: auth-service # this representation go project name
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      PORT: 8081
      DB_URL: postgres://sukenda:sukenda@postgres:5432/sukenda
      JWT_SECRET_KEY: r43t18sc
    networks:
      - backend
    depends_on:
      - postgres

# Order Service
  order-service:
    container_name: order-service
    build:
      context: order-service # this representation go project name
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      PORT: 8082
      DB_URL: postgres://sukenda:sukenda@postgres:5432/sukenda
      PRODUCT_SVC_URL: product-service:8083
    depends_on:
      - postgres
      - product-service
    networks:
      - backend

# Product Service
  product-service:
    container_name: product-service
    build:
      context: product-service # this representation go project name
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      PORT: 8083
      DB_URL: postgres://sukenda:sukenda@postgres:5432/sukenda
    networks:
      - backend
    depends_on:
      - postgres

networks:
  backend:
    driver: bridge

volumes:
  postgres:
