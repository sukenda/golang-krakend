{
  "swagger": "2.0",
  "info": {
    "title": "proto/auth.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AuthService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/jwk": {
      "get": {
        "operationId": "AuthService_JWKValidate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authJWKValidateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authLoginRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthService_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authRegisterRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/auth/validate": {
      "post": {
        "operationId": "AuthService_Validate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authValidateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authValidateRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    }
  },
  "definitions": {
    "authClaims": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "authJWK": {
      "type": "object",
      "properties": {
        "kty": {
          "type": "string"
        },
        "use": {
          "type": "string"
        },
        "kid": {
          "type": "string"
        },
        "k": {
          "type": "string"
        },
        "alg": {
          "type": "string"
        }
      }
    },
    "authJWKValidateResponse": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/authJWK"
          }
        }
      }
    },
    "authLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "Login"
    },
    "authLoginResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "$ref": "#/definitions/authToken"
        },
        "refresh_token": {
          "$ref": "#/definitions/authToken"
        },
        "exp": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "authRegisterRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "profile": {
          "type": "string"
        }
      },
      "title": "Register"
    },
    "authRegisterResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "format": "int64"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "authToken": {
      "type": "object",
      "properties": {
        "aud": {
          "type": "string"
        },
        "iss": {
          "type": "string"
        },
        "sub": {
          "type": "string"
        },
        "jti": {
          "type": "string"
        },
        "exp": {
          "type": "number",
          "format": "float"
        },
        "claims": {
          "$ref": "#/definitions/authClaims"
        }
      }
    },
    "authValidateRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "authValidateResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "format": "int64"
        },
        "error": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
